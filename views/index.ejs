<!DOCTYPE html>
<html lang="en" dir="ltr">
<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this file,
   - You can obtain one at http://mozilla.org/MPL/2.0/.  -->
<head>
  <meta charset="utf-8">
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">

  <!--Load the AJAX API-->
  <script type="text/javascript" src="https://www.google.com/jsapi"></script>
  <script type="text/javascript" src="http://code.jquery.com/jquery.js"></script>
  <script type="text/javascript">

    // Load the Visualization API and the piechart package.
    google.load('visualization', '1.0', {'packages':['corechart']});

    // Set a callback to run when the Google Visualization API is loaded.
    google.setOnLoadCallback(drawChart);

    var engines = null;
    var titles = { "default"  : "Default Search Engines",
                   "add"      : "Search Engines found in the wild",
                   "update"   : "Most update search engine descriptions",
                   "use"      : "Most Used Search Engines"
                  };

    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function drawChart() {

      // block on loading all the engines first
      // TODO: don't do this :)
      engines = JSON.parse($.ajax({
        url: "/engines",
        dataType:"json",
        async: false
      }).responseText).engines;
      console.log("engines", engines);

      // just some useless pie charts to exemplify what is possible
      ["default", "add", "update", "use"].forEach(function(action) {
        $.ajax({
            url: "/count/" + action,
            dataType:"json",
            async: true
        }).done(function(data) {
              var count = data.count;
              var engineData = [];
              count.forEach(function(e,i,a) {
                //console.log(e, i);
                if (i % 2 == 0) {
                  var id = e, score = a[i+1];
                  engineData.push([engines[id].name, parseInt(score)]);
                }
              })
              //console.log(engineData);
              // Create the data table.
              var datatable = new google.visualization.DataTable();
              datatable.addColumn('string',  titles[action]);
              datatable.addColumn('number', action);
              datatable.addRows(engineData.sort(function (a, b) { return a[1] < b[1];  }));
              // Set chart options
              var options = {'title': titles[action],
                             'is3D' : true,
                             'width': 480,
                             'height':320
                             };
              // Instantiate and draw our chart, passing in some options.
              var chart = new google.visualization.PieChart($("<div/>").attr("id", action + "-count").appendTo("#charts").get(0));
              chart.draw(datatable, options);
        });
      });
    }

  </script>

</head>
<body>
    <div id="charts"></div>
</body>
</html>
